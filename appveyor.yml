version: build-{build}.{branch}

clone_folder: C:\gopath\src\github.com\axsh\openvdc
clone_depth: 10

environment:
  GOPATH: C:\gopath
  JAVA_HOME: C:\Program Files\Java\jdk1.8.0_121

cache:
  - '%GOPATH%\.cache -> vendor\vendor.json'

platform:
  - x64

init:
  - git config --global core.autocrlf input
  - netsh advfirewall firewall add rule name="Zookeeper - in" dir=in action=allow protocol=TCP localport=2181
  - netsh advfirewall firewall add rule name="Zookeeper - out" dir=out action=allow protocol=TCP localport=2181
  - netsh advfirewall firewall add rule name="Zookeeper quorum - in" dir=in action=allow protocol=TCP localport=2888
  - netsh advfirewall firewall add rule name="Zookeeper quorum - out" dir=out action=allow protocol=TCP localport=2888
  - netsh advfirewall firewall add rule name="Zookeeper leader - in" dir=in action=allow protocol=TCP localport=3888
  - netsh advfirewall firewall add rule name="Zookeeper leader - out" dir=out action=allow protocol=TCP localport=3888

install:
  # some helpful output for debugging builds
  - go version
  - go env
  - cinst jdk8
  - ps: New-Item C:\ZooKeeper -type directory
  - powershell -ExecutionPolicy Bypass .\ci\appveyor\install-zk.ps1 C:\ZooKeeper
  - ps: $ZkProcess = Start-Process -FilePath "C:\ZooKeeper\bin\zkServer.cmd" -PassThru -NoNewWindow
  - dir C:\ZooKeeper
  - ps: $ZkProcess | fl
  - ps: if ( $ZkProcess.HasExited -eq $True ) { Write-Error "Failed to start zookeeper"; exit 1; }

build_script:
  - set PATH=C:\gopath\bin;%PATH%
  - go run ./build.go

test_script:
  - set ZK=127.0.0.1
  - set GITHUB_DEFAULT_REF=%APPVEYOR_REPO_BRANCH%
  - ps: go list ./... | Select-String -NotMatch "/vendor/" | ForEach-Object { go test -v $_.Line }

on_finish:
  - ps: Stop-Process -Id $ZkProcess.Id -ErrorAction Ignore

deploy: off
