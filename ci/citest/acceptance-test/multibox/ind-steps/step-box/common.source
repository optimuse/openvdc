#!/bin/bash
. "${ENV_ROOTDIR}/external_libraries/mount-partition/mount-partition.sh" load

box=$"${box:-minimal}"
distr_ver="${distr_ver:-7.3.1611}"
arch="${arch:-x86_64}"


function cache_image () {
    echo "${CACHE_DIR}/${BRANCH}/${vm_name}.qcow2"
}

function vm_image () {
    echo "${NODE_DIR}/box-disk1.raw"
}

function destroy_vm() {
    (
        $starting_step "Kill vm ${vm_name}"
        [[ ! -f "${NODE_DIR}/${vm_name}.pid" ]]
        $skip_step_if_already_done; set -x +e
        sudo kill $(sudo cat "${NODE_DIR}/${vm_name}.pid")
        sudo rm -f "${NODE_DIR}/${vm_name}.pid"
    ) # ; prev_cmd_failed ### TODO: bashstep missing feature (axsh/openvdc#77)

    (
        $starting_step "Remove copy-on-write image"
        [ ! -f "${NODE_DIR}/${vm_name}.qcow2" ]
        $skip_step_if_already_done ; set -x +e
        rm -f "${NODE_DIR}/${vm_name}.qcow2"
    ) # ; prev_cmd_failed ### TODO: bashstep missing feature (axsh/openvdc#77)
    local i
    for (( i=0 ; i < ${#nics[@]} ; i++ )) ; do
      nic=(${nics[$i]})
      # Attach tap device to bridge if bridge= was provided
      [[ -z "${nic[2]#*=}" ]] || {
          (
              $starting_step "Attach ${nic[0]#*=} to ${nic[2]#*=}"
              ! (brctl show ${nic[2]#*=} | grep -wq ${nic[0]#*=})
              $skip_step_if_already_done; set -x +e
              sudo brctl delif ${nic[2]#*=} ${nic[0]#*=}
          ) # ; prev_cmd_failed ### TODO: bashstep missing feature (axsh/openvdc#77)
      }
      (
        ifname="${nic[0]#*=}"
        $starting_step "Destroy ${ifname}"
        ! ip link show dev "${ifname}"
        $skip_step_if_already_done; set -x +e
        sudo ip link set dev "${ifname}" down
        sudo ip link delete dev "${ifname}"
      ) # ; prev_cmd_failed ### TODO: bashstep missing feature (axsh/openvdc#77)
    done
}

function destroy_vm_cache() {
    (
        $starting_step "Remove SSH key"
        [ ! -f ${NODE_DIR}/sshkey ]
        $skip_step_if_already_done
        rm ${NODE_DIR}/sshkey
    ) # ; prev_cmd_failed ### TODO: bashstep missing feature (axsh/openvdc#77)

    (
        $starting_step "Remove base image ${vm_name}"
        [ ! -f "$(cache_image)" ]
        $skip_step_if_already_done; set -x +e
        rm -f "${CACHE_DIR}/${BRANCH}/sshkey_${vm_name}"*
        rm -f "$(cache_image)"
    ) # ; prev_cmd_failed ### TODO: bashstep missing feature (axsh/openvdc#77)
}

function umount-seed-image() {
    (
        $starting_step "Unmount temporary root folder for ${vm_name}"
        mount | grep -q "${TMP_ROOT}"
        [ "$?" != "0" ]
        $skip_step_if_already_done; set -x +e
        umount-partition --sudo "${TMP_ROOT}"
        rmdir "${TMP_ROOT}"
    ) ; prev_cmd_failed
}
